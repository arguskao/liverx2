<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>caddy on 活力藥師網番外篇</title>
    <link>https://www.liverx.org/tag/caddy/</link>
    <description>Recent content in caddy on 活力藥師網番外篇</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Tue, 12 May 2020 15:09:30 +0800</lastBuildDate><atom:link href="https://www.liverx.org/tag/caddy/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>用Caddy2來架設wordpress</title>
      <link>https://www.liverx.org/2020/05/12/%E7%94%A8caddy2%E4%BE%86%E6%9E%B6%E8%A8%ADwordpress/</link>
      <pubDate>Tue, 12 May 2020 15:09:30 +0800</pubDate>
      
      <guid>https://www.liverx.org/2020/05/12/%E7%94%A8caddy2%E4%BE%86%E6%9E%B6%E8%A8%ADwordpress/</guid>
      <description>講起Web server，大家熟知的應該是apache或者Nginx，但是這幾年出現更輕薄短小的Caddy，我會知道這個東西，是因為玩Hugo，剛好都是go語言寫的東西，雖然一直還沒時間研究出如果用Caddy+hugo並且自動部屬。
之前Caddy1的時候，我有拿來架過Wordpress，不知道是不是心理作用，真的速度上有比較快，結果一眨眼，Caddy2就出現了，但是網路上很少人討論，我花了一些時間研究，記錄下來，免得自己忘掉。
安裝在VPS上，只有一個地方要注意，就是如果在 GCP 架設 Caddy 的話要注意，GCP 因為安全考量，必須要用 root 身分執行 Caddy 才能監聽 80 Port，所以要修改 caddy.service。
sudo vim /etc/systemd/system/caddy.service ; User and group the process will run as. User=root Group=www-data 然後在Ubuntu上安裝Caddy2，其實步驟比Caddy1更容易。首先是download
echo &amp;quot;deb [trusted=yes] https://apt.fury.io/caddy/ /&amp;quot; \ | sudo tee -a /etc/apt/sources.list.d/caddy-fury.list sudo apt update sudo apt install caddy 基本上到這裡，就快安裝好了，但是沒有設定開機啟動可不行，所以要設定一下。
sudo systemctl daemon-reload sudo systemctl enable caddy sudo systemctl start caddy 設定好以後，檢查一下是否正確
systemctl status caddy Caddy2 到此就安裝好，接下來要設定Caddyfile這個重要的檔案。 正常來說，直接進入/etc/caddy裡面編輯就好
第一行預設是:80，我直接改成網址去掉後面的:80
第二行是 虛擬主機的位置，你看檔案要放在哪裡</description>
    </item>
    
    <item>
      <title>Caddy和wordpress</title>
      <link>https://www.liverx.org/2019/12/01/caddy%E5%92%8Cwordpress/</link>
      <pubDate>Sun, 01 Dec 2019 18:27:33 +0800</pubDate>
      
      <guid>https://www.liverx.org/2019/12/01/caddy%E5%92%8Cwordpress/</guid>
      <description>自從上一篇caddy終於成功了以後，我真的就迷上caddy了，雖然caddy更版的速度超快，但是既然已經有1.04的穩定版，於是我就手癢想試試看，能不能在caddy 架wordpress。
一般來說傳統架wordpress，都是用apache+php+mysql，或者騷包一點的就用nginx+php+mysql，今天則是要用caddy+php+mysql。
假設你都安裝好caddy，接下來要裝PHP 7.2 (以ubuntu18.04為例，如果是19.04，是php7.3，底下的7.2要改成7.3)
sudo apt-get install -y php7.2-fpm php7.2-mysql php7.2-bcmath php7.2-bz2 php7.2-curl php7.2-gd php7.2-intl php7.2-fileinfo php7.2-iconv php7.2-mbstring php7.2-xml php7.2-xmlrpc php7.2-zip 裝好以後，可以用info.php1或者php -v 看看是否有成功 然後就是把設定加到Caddyfile裡面
example.com { tls xxx@gmail.com # 你自己的Email root /var/www/wordpress gzip fastcgi / unix:/var/run/php/php7.3-fpm.sock php rewrite { if {path} not_match ^\/wp-admin to {path} {path}/ /index.php?{query} } header /assets { # 加入檔頭，指定 assets 路徑下 Cache-Control &amp;quot;max-age=604800&amp;quot; # 控制瀏覽器快取，壽命一週 } } 上面有個小坑，害我花了三四個小時找錯誤，就是路徑 /var/run/php (有的說明文件沒有php，所以路徑錯，一直php不能啟動。
最後再安裝Mysql，務必按照順序。
sudo apt-get install mysql-server sudo apt install mysql-client sudo apt install libmysqlclient-dev 然後就登入MySQL：</description>
    </item>
    
    <item>
      <title>Caddy終於成功了</title>
      <link>https://www.liverx.org/2019/10/13/caddy%E7%B5%82%E6%96%BC%E6%88%90%E5%8A%9F%E4%BA%86/</link>
      <pubDate>Sun, 13 Oct 2019 15:37:54 +0800</pubDate>
      
      <guid>https://www.liverx.org/2019/10/13/caddy%E7%B5%82%E6%96%BC%E6%88%90%E5%8A%9F%E4%BA%86/</guid>
      <description>每次我都會玩一些有的沒有的，基本上都問不到人，只能從網路上找一些資料，偏偏網路資料很多錯誤的，尤其是內地的資料，很多都是抄襲的，錯誤的地方還一模一樣，所以希望趕快筆記下來，免得我自己忘記。
前一陣子，整個從Wordpress，換到Hugo，然後研究Hugo幾個禮拜，可惜台灣幾乎沒有人玩這個，也可能有，我智障找不到，只能夠自己慢慢研究，後來終於選了一些好的版型，發現即使沒有AMP，SEO的效果也很好。
換到Hugo以後，就開始對靜態網頁這種東西著迷了，速度快，架設起來很方便，又剛好碰到Oracle推免費主機，當然趕快搶了兩台，他們主機有個特性，就是頻寬很大，但是主機慢到爆，可能都是回收的主機，可能連SSD都沒有，於是想要利用這個頻寬大的主機，只能夠利用靜態網頁的特性了，在上面架Hugo，但是&amp;hellip;..如果這種主機使用傳統的apache，太肥大了。甚至連Nginx都會太大，我就想起來了和hugo一樣都是Go語言寫的Caddy，看到網路上介紹，非常輕薄短小，我就準備一台主機來好好折騰了。
其實Caddy設定很簡單，我花很多天的時間是因為我的port被封住，我不知道，所以白白浪費很多天，偷懶的我，要參考一下大德的文章。
參考1：將 nginx 調整為 caddy，世界上的網站都與 ssl 做好朋友
大概按照步驟一步一步就可以設定完成了。不過中間gist程式那裏有些小地方錯誤，可能大家要自己注意一下。
最難的地方就是設定那個Caddyfile，還有發證書的地方。
如果是透過Cloudflare來設定DNS，**請記住設定DNS only，橘色不要選取喲。 **，然後有一個指令很重要，非打不可。1
sudo setcap &#39;cap_net_bind_service=+ep&#39; /usr/local/bin/caddy
我每次都會出現沒有setcap這個指令，請安裝libcap2-bin，才會出現
這裡打對了，等一下設定檔，只需要打一行就好，他會自動幫你申請證書。
重點來了，Caddyfile要怎麼設定呢？舉一個例子，假設你的網址是oracle.example.com
 oracle.example.com { tls example@gmail.com #這裡打你自己的Email root /var/www #這裡打你的檔案路徑 index index.html gzip # 網頁壓縮 header /assets { # 加入檔頭，指定 assets 路徑下 Cache-Control &amp;quot;max-age=604800&amp;quot; # 控制瀏覽器快取，壽命一週 } } 這樣就打完收工了！我希望Caddy能夠繼續輕薄短小，不要再肥大囉！
附註：會碰到port 80 被占用的話，就使用
sudo netstat -lnp | grep 80 看哪個程式PID佔用port 80，通常caddy自己也會佔用，砍掉就正常了。
sudo chmod 644 /etc/systemd/system/caddy.service sudo systemctl enable caddy.service sudo systemctl start caddy.</description>
    </item>
    
  </channel>
</rss>
