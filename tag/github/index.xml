<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>github on 活力藥師網番外篇</title>
    <link>https://www.liverx.org/tag/github/</link>
    <description>Recent content in github on 活力藥師網番外篇</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Mon, 14 Jun 2021 22:29:09 +0800</lastBuildDate><atom:link href="https://www.liverx.org/tag/github/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>怎麼解決git上傳github的問題</title>
      <link>https://www.liverx.org/2021/06/14/%E6%80%8E%E9%BA%BC%E8%A7%A3%E6%B1%BAgit%E4%B8%8A%E5%82%B3github%E7%9A%84%E5%95%8F%E9%A1%8C/</link>
      <pubDate>Mon, 14 Jun 2021 22:29:09 +0800</pubDate>
      
      <guid>https://www.liverx.org/2021/06/14/%E6%80%8E%E9%BA%BC%E8%A7%A3%E6%B1%BAgit%E4%B8%8A%E5%82%B3github%E7%9A%84%E5%95%8F%E9%A1%8C/</guid>
      <description>距離上一篇廢話已經快要9個月，當然偷懶的原因也有，但是最主要的原因是因為我把番外篇從Wordpress變成Hugo，又把Hugo架在Github上，你知道像我們這種非科班的，怎麼會用git這種高級的工具，所以常常會出現錯誤，身邊又找不到人問，久了以後，就不太想寫文章，但是
 我今天剛好找到一個很棒的工具，解決我所有的問題！
 不教大家用，純粹爽到不記錄不行，這工具就是Github Desktop，試用以後，寫文章上傳都不會錯誤了，看來我今年真的要出運了！</description>
    </item>
    
    <item>
      <title>Gitlab的設定</title>
      <link>https://www.liverx.org/2019/10/22/gitlab%E7%9A%84%E8%A8%AD%E5%AE%9A/</link>
      <pubDate>Tue, 22 Oct 2019 08:41:28 +0800</pubDate>
      
      <guid>https://www.liverx.org/2019/10/22/gitlab%E7%9A%84%E8%A8%AD%E5%AE%9A/</guid>
      <description>對於很多人來說，或者是網路上的說明，都說Github和Gitlab一樣，不過網路上的教學幾乎都是Github，要找到Gitlab的非常非常少，就算有，也因為是技術人員寫的，所以根本不會寫一些簡單的事情。
實際上這兩個網站是有不少的差別的，對於想要把Hugo這個SSG，Host在上面的人來說，可能會花點力氣，至少對我這種沒程度的人來說，差點搞死了。
我覺得最大的差點有兩點，本來有三點，就是private repo，但是後來github也取消了。
 Hugo 產生的靜態網頁目錄，預設是public，是要直接丟在github上，然後就可以執行了。但是gitlab不行，他必須將整個網站丟上去，讓gitlab去執行，然後還必須設定一個CI/CD檔案。（就是這個設定，讓我搞了快一個月，本來是要放棄的，因為網路上找不到資料）。 有時候在git push 的時候，因為遠端的檔案比較新，github可以用force的指令，硬上傳就沒事，但是Gitlab一定要找出原因，通常要git pull下來解決才行，這個也挺頭大。  這裡記載一下搞了我很久的問題，就是設定CI/CD檔案，檔名是.gitlab-ci.yml 這個有範例，但不知道為何網路上範例都不一樣，結果不能用
image: monachus/hugo variables: GIT_SUBMODULE_STRATEGY: recursive test: script: - hugo except: - master pages: script: - hugo artifacts: paths: - public only: - master 本來以為設定這個成功以後，就可以用了，沒想到居然出現
fatal: No url found for submodule path &amp;#39;public&amp;#39; in .gitmodules 我看大家都沒事，不知道我為何會這樣，找了半天資料告訴我應該先設定.gitmodules 這個檔案，裡面的內容是
[submodule &amp;#34;path_to_submodule&amp;#34;] （這裡一定要 打public） path = path_to_submodule (通常是 themes/版面名稱） url = git://url-of-source/ （版面的git位置） 設定好以後再
git submodule init git submodule update 還要設定.</description>
    </item>
    
  </channel>
</rss>
